name: "üí° Feature Request"
description: "Suggest an idea or improvement for PyLua v0.3 (Python-in-Luau for Roblox)."
title: "[FEATURE] "
labels: ["enhancement", "needs-triage"]
body:
  - type: markdown
    attributes:
      value: |
        Thank you for suggesting a feature for **PyLua v0.3**!
        
        **Important**: We are currently in a major rewrite phase following a specific [development plan](https://github.com/OMouta/PyLua/blob/master/InternalDocs/REWRITE_PLAN.md). Please check if your feature aligns with our current development phase and Python 3.12 compliance goals.
        
        Please provide as much detail as possible to help us understand your idea and how it fits into the project.
  
  - type: dropdown
    id: feature-type
    attributes:
      label: "üéØ Feature Type"
      description: "What type of feature are you requesting?"
      options:
        - "New Python language feature/syntax support"
        - "New built-in function or method"
        - "Performance improvement"
        - "API enhancement"
        - "Developer tooling/debugging"
        - "Documentation improvement"
        - "Roblox-specific integration"
        - "Other"
    validations:
      required: true
  
  - type: dropdown
    id: development-phase
    attributes:
      label: "üìã Development Phase Alignment"
      description: "Which development phase does this feature align with? (See REWRITE_PLAN.md)"
      options:
        - "Phase 1: Foundation (lexer, parser, AST)"
        - "Phase 2: Core Parser (expressions, statements)"
        - "Phase 3: Object System (Python objects, types)"
        - "Phase 4: Bytecode & VM (compilation, execution)"
        - "Phase 5: Built-ins & Advanced Features"
        - "Future phases (v3.1+)"
        - "Not sure / General improvement"
    validations:
      required: true
  
  - type: textarea
    id: feature-description
    attributes:
      label: "üìù Feature Description"
      description: "Describe the feature or enhancement you'd like to see in PyLua. Be specific about the Python or Luau functionality, API, or user experience."
      placeholder: "I would like PyLua to support Python's [feature] so that users can..."
    validations:
      required: true
  
  - type: textarea
    id: python-example
    attributes:
      label: "üêç Python Example"
      description: "Show how this feature would work in Python 3.12 (if applicable)"
      render: python
      placeholder: |
        # Example Python code that should work
        def example():
            # Your feature demonstration here
            pass
    validations:
      required: false
  
  - type: textarea
    id: proposed-api
    attributes:
      label: "üåô Proposed PyLua API"
      description: "How would users interact with this feature in PyLua? Show the Luau code."
      render: lua
      placeholder: |
        local PyLua = require('src.PyLua')
        local python = PyLua.new()
        
        -- How would this feature be used?
        python:execute([[
          # Your Python example here
        ]])
    validations:
      required: false
  
  - type: textarea
    id: motivation
    attributes:
      label: "üöÄ Motivation / Use Case"
      description: "Why is this feature important? What problem does it solve? What new capabilities does it enable for PyLua users?"
      placeholder: "This feature would solve the problem of... and enable users to..."
    validations:
      required: true
  
  - type: checkboxes
    id: python-compliance
    attributes:
      label: "üêç Python 3.12 Compliance"
      description: "How does this relate to Python 3.12 compliance?"
      options:
        - label: "This is a standard Python 3.12 feature that should be supported"
        - label: "This is a Python feature from an earlier version (3.11 and below)"
        - label: "This is a PyLua-specific enhancement (not in standard Python)"
        - label: "This is a Roblox/Luau integration feature"
        - label: "Not applicable"
  
  - type: checkboxes
    id: affected-components
    attributes:
      label: "‚öôÔ∏è Affected Components"
      description: "Which parts of PyLua would this feature affect? (Check all that apply)"
      options:
        - label: "Lexer/Tokenizer (`lexer.luau`)"
        - label: "Parser (`parser.luau`)"
        - label: "AST System (`ast/`)"
        - label: "Compiler (`compiler.luau`)"
        - label: "Virtual Machine (`vm/`)"
        - label: "Object System (`objects/`)"
        - label: "Built-in Functions (`builtins/`)"
        - label: "API/Interface (`init.luau`)"
        - label: "Documentation"
        - label: "Testing framework"
        - label: "Not sure"
  
  - type: textarea
    id: alternatives
    attributes:
      label: "üîÑ Alternatives Considered"
      description: "Have you considered any alternative approaches or workarounds? How do other Python interpreters handle this?"
      placeholder: "I considered... but this approach would be better because..."
    validations:
      required: false
  
  - type: textarea
    id: implementation-notes
    attributes:
      label: "üîß Implementation Notes"
      description: "Do you have any ideas about how this could be implemented? Any technical considerations?"
      placeholder: "This could potentially be implemented by... Some challenges might include..."
    validations:
      required: false
  
  - type: checkboxes
    id: checklist
    attributes:
      label: "üìã Checklist"
      description: "Please confirm you have done the following:"
      options:
        - label: "I have searched existing issues to make sure this isn't a duplicate"
          required: true
        - label: "I have reviewed the REWRITE_PLAN.md to understand current development priorities"
          required: true
        - label: "I have considered how this fits with Python 3.12 compliance goals"
          required: false
        - label: "I have provided a clear use case and motivation"
          required: true
  
  - type: textarea
    id: additional-context
    attributes:
      label: "üìù Additional Context"
      description: "Any other information that might be helpful (links to Python documentation, similar implementations, etc.)"
    validations:
      required: false
