name: "Feature Request"
description: "Suggest an idea or improvement for PyLua v0.3."
title: "[FEATURE] "
labels: ["enhancement", "needs-triage"]
body:
  - type: markdown
    attributes:
      value: |
        Thanks for proposing a feature for **PyLua v0.3**.

        Please check the docs/roadmap to ensure fit with Python 3.12 compliance and current phases.
        Docs: https://github.com/OMouta/PyLua/blob/master/docs/README.md â€¢ Roadmap: https://github.com/OMouta/PyLua/blob/master/internalDocs/REWRITE_PLAN.md

  - type: dropdown
    id: feature-type
    attributes:
      label: "Feature Type"
      options:
        - "Python syntax/semantics support"
        - "Built-in function or method"
        - "Performance improvement"
        - "Public API enhancement"
        - "Developer tooling / debugging"
        - "Documentation"
        - "Roblox/Luau interop"
        - "Other"
    validations:
      required: true

  - type: dropdown
    id: development-phase
    attributes:
      label: "Phase Alignment (from REWRITE_PLAN)"
      options:
        - "Phase 1: Foundation (lexer, tokens, AST)"
        - "Phase 2: Parser (expressions, statements, postfix)"
        - "Phase 3: Object System (types, collections)"
        - "Phase 4: Bytecode & VM"
        - "Phase 5: Builtins & Advanced"
        - "Later roadmap (v3.1+ classes/modules)"
        - "Not sure / cross-cutting"
    validations:
      required: true

  - type: textarea
    id: feature-description
    attributes:
      label: "Feature Description"
      description: "What should be added and why?"
      placeholder: "Support Python [feature] so users can ..."
    validations:
      required: true

  - type: textarea
    id: python-example
    attributes:
      label: "Python Example"
      description: "Show example Python 3.12 code if relevant"
      render: python
      placeholder: |
        # Example demonstrating the desired capability
        def example():
            pass
    validations:
      required: false

  - type: textarea
    id: proposed-api
    attributes:
      label: "Proposed PyLua Usage/API"
      description: "How would end users interact with this?"
      render: lua
      placeholder: |
        local PyLua = require("../src/PyLua")
        local py = PyLua.new()
        py:execute([[\n          # Your Python example here\n        ]])
        -- or: local PyLua = require("@self/PyLua")
    validations:
      required: false

  - type: textarea
    id: motivation
    attributes:
      label: "Motivation / Use Case"
      placeholder: "This enables ... because ..."
    validations:
      required: true

  - type: checkboxes
    id: python-compliance
    attributes:
      label: "Python 3.12 Compliance Context"
      options:
        - label: "Standard Python 3.12 feature"
        - label: "Earlier Python feature (<=3.11)"
        - label: "PyLua-specific (not in CPython)"
        - label: "Roblox/Luau interop"
        - label: "Not applicable"

  - type: checkboxes
    id: affected-components
    attributes:
      label: "Affected Components"
      options:
        - label: "Lexer / tokens (`src/PyLua/lexer.luau`, `tokens.luau`)"
        - label: "Parser (`src/PyLua/parser/*`)"
        - label: "AST (`src/PyLua/ast/*`)"
        - label: "Compiler (`src/PyLua/compiler.luau`)"
        - label: "Bytecode (`src/PyLua/bytecode/*`)"
        - label: "VM (`src/PyLua/vm/*`)"
        - label: "Objects (`src/PyLua/objects/*`)"
        - label: "Builtins (`src/PyLua/builtins/*`)"
        - label: "Interop (`src/PyLua/interop/*`)"
        - label: "Public API (`src/PyLua/init.luau`)"
        - label: "Documentation"
        - label: "Tests"
        - label: "Not sure"

  - type: textarea
    id: alternatives
    attributes:
      label: "Alternatives Considered"
      placeholder: "Other approaches and tradeoffs"
    validations:
      required: false

  - type: textarea
    id: implementation-notes
    attributes:
      label: "Implementation Notes (optional)"
      placeholder: "Rough approach, affected files, risks"
    validations:
      required: false

  - type: checkboxes
    id: checklist
    attributes:
      label: "Checklist"
      options:
        - label: "Searched existing issues"
          required: true
        - label: "Reviewed REWRITE_PLAN.md for phase fit"
          required: true
        - label: "Provided motivation and (if possible) example"
          required: true

  - type: textarea
    id: additional-context
    attributes:
      label: "Additional Context"
      description: "Links to Python docs, similar projects, etc."
    validations:
      required: false
